{"version":3,"file":"default-src_app_services_base_service_ts.js","mappings":"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","sources":["./src/app/services/base.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { SQLite, SQLiteObject } from '@awesome-cordova-plugins/sqlite/ngx';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { AsigSeccs } from './asig-seccs';\r\nimport { Asignaturas } from './asignaturas';\r\nimport { Asistencias } from './asistencias';\r\nimport { DetalleAsists } from './detalle-asists';\r\nimport { Listados } from './listados';\r\nimport { Roles } from './roles';\r\nimport { Secciones } from './secciones';\r\nimport { Usuarios } from './usuarios';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService {\r\n  public database: SQLiteObject;\r\n  //variables para crear tablas e insertar registros por defecto en tablas\r\n  usuario: string =\"CREATE TABLE IF NOT EXISTS usuario(id_usuario INTEGER PRIMARY KEY autoincrement, nombre VARCHAR(50) NOT NULL, clave VARCHAR(50) NOT NULL,  id_rol INTEGER NOT NULL, imagen BLOB, nombre_r VARCHAR(50), telefono INTEGER, correo VARCHAR(50), direccion VARCHAR(50));\";\r\n\r\n  asignatura: string = \"CREATE TABLE IF NOT EXISTS asignatura(id_asignatura INTEGER PRIMARY KEY autoincrement, sigla VARCHAR(50) NOT NULL, nombre VARCHAR(50) NOT NULL);\";\r\n\r\n  seccion: string = \"CREATE TABLE IF NOT EXISTS seccion(id_seccion INTEGER PRIMARY KEY autoincrement, sigla VARCHAR(50) NOT NULL);\";\r\n    //rol: string = \"CREATE TABLE IF NOT EXISTS rol(id_rol INTEGER PRIMARY KEY autoincrement, nom_rol VARCHAR(50) NOT NULL;\";\r\n  asig_secc: string =\"CREATE TABLE IF NOT EXISTS asig_secc(id_asig_secc INTEGER PRIMARY KEY autoincrement, FOREIGN KEY(fk_id_asignatura) REFERENCES asignatura(id_asignatura), FOREIGN KEY(fk_id_seccion) REFERENCES seccion(id_seccion),FOREIGN KEY(fk_id_usuario) REFERENCES usuario(id_usuario));\";\r\n\r\n    asistencia: string = \"CREATE TABLE IF NOT EXISTS asistencia(id_asistencia INTEGER PRIMARY KEY autoincrement, fecha DATE NOT NULL, hora_inicio VARCHAR(50) NOT NULL, hora_fin VARCHAR(50) NOT NULL, FOREIGN KEY(fk_id_asig_secc) REFERENCES asig_secc(id_asig_secc));\";\r\n    //listado: string = \"CREATE TABLE IF NOT EXISTS listado(id_listado INTEGER PRIMARY KEY autoincrement, status VARCHAR(50) NOT NULL,FOREIGN KEY(id_usuario) REFERENCES usuario(id_usuario),FOREIGN KEY(id_asig_secc) REFERENCES asig_secc(id_asig_secc);\";\r\n    detalle_asist: string = \"CREATE TABLE IF NOT EXISTS detalle_asist(id_detalle INTEGER PRIMARY KEY autoincrement, status VARCHAR(50) NOT NULL, FOREIGN KEY(fk_id_usuario) REFERENCES usuario(id_usuario),FOREIGN KEY(fk_id_asistencia) REFERENCES asistencia(id_asistencia));\";\r\n\r\n\r\n  \r\n  \r\n    //observable para manipular los registros de una tabla\r\n  listaUsuarios = new BehaviorSubject([]);\r\n  listaAsistecia = new BehaviorSubject([]);\r\n  listaSecciones = new BehaviorSubject([]);\r\n  listaAsig_secc = new BehaviorSubject([]);\r\n  listaDetalle_asist = new BehaviorSubject([]);\r\n  listaListado = new BehaviorSubject([]);\r\n  listaRol = new BehaviorSubject([]);\r\n  listAsignatura = new BehaviorSubject([]);\r\n    //observable para validar si la BD esta disponible o no\r\n  private isDBReady: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  \r\n\r\n  constructor(private sqlite: SQLite, private platform: Platform, private alertController: AlertController) {\r\n    this.crearBD();\r\n  }\r\n  async presentAlert(msj: string) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Importante',\r\n      message: msj,\r\n      buttons: ['OK'],\r\n    });\r\n  \r\n    await alert.present();\r\n  }\r\n  \r\n  crearBD() {\r\n    //verificamos que la plataforma este lista\r\n    this.platform.ready().then(() => {\r\n      //creamos la BD\r\n      this.sqlite.create({\r\n        name: 'bdasist2.db',\r\n        location: 'default'\r\n      }).then((db: SQLiteObject) => {\r\n        this.database = db;\r\n        //llamar a la funcion para crear las tablas\r\n        this.crearTablas();\r\n      }).catch(e => {\r\n        this.presentAlert(\"Error creación BD: \" + e);\r\n      })\r\n  \r\n  \r\n    })\r\n  }\r\n  \r\n  \r\n    async crearTablas() {\r\n      try {\r\n        //ejecuto creacion de tablas\r\n        await this.database.executeSql(this.usuario, []);\r\n        await this.database.executeSql(this.asignatura, []);\r\n        await this.database.executeSql(this.seccion, []);\r\n        //await this.database.executeSql(this.asig_secc, []);\r\n        //await this.database.executeSql(this.asistencia, []);\r\n        //await this.database.executeSql(this.detalle_asist, []);\r\n        \r\n\r\n  \r\n        //llamo al observable de carga de datos\r\n        this.buscarUsuarios();\r\n        this.buscarseccion();\r\n        this.buscarasig_secc();\r\n        this.buscarasistencia();\r\n        this.buscarasignatura();\r\n        //this.buscarlistas();\r\n        this.buscardetalle_asist();\r\n        //this.buscarrol();\r\n        //modificar el observable de el status de la BD\r\n        this.isDBReady.next(true);\r\n  \r\n      } catch (e) {\r\n        this.presentAlert(\"Error creación Tabla: \" + e);\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n  dbState() {\r\n    return this.isDBReady.asObservable();\r\n  }\r\n    //1 usuario\r\n  fetchUsuarios(): Observable<Usuarios[]> {\r\n    return this.listaUsuarios.asObservable();\r\n  }\r\n    //2 asig_secc\r\n    fetchAsig_asecc(): Observable<AsigSeccs[]> {\r\n      return this.listaAsig_secc.asObservable();\r\n    }\r\n    //3 asistencia\r\n    fetchAsistencias(): Observable<Asistencias[]> {\r\n      return this.listaAsistecia.asObservable();\r\n    }\r\n    //4 rol\r\n    fetchRoles(): Observable<Roles[]> {\r\n      return this.listaRol.asObservable();\r\n    }\r\n    //5 detalle asist\r\n    fetchDetalle_asists (): Observable<DetalleAsists[]> {\r\n      return this.listaDetalle_asist.asObservable();\r\n    }\r\n    //6 listas\r\n    fetchListados (): Observable<Listados[]> {\r\n      return this.listaListado.asObservable();\r\n    }\r\n    //7 secciones\r\n    fetchSecciones (): Observable<Secciones[]> {\r\n      return this.listaSecciones.asObservable();\r\n    }\r\n    //8 asignatura\r\n    fetchAsignaturas (): Observable<Asignaturas[]> {\r\n      return this.listAsignatura.asObservable();\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    buscarasistencia() {\r\n      //ejecuto la consulta\r\n      return this.database.executeSql('SELECT * FROM asistencia', []).then(res => {\r\n        //creo el arreglo para los registros\r\n        let items: Asistencias[] = [];\r\n        //si existen filas\r\n        if (res.rows.length > 0) {\r\n          //recorro el cursor y lo agrego al arreglo\r\n          for (var i = 0; i < res.rows.length; i++) {\r\n            items.push({\r\n              id_asistencia: res.rows.item(i).id_asistencia,\r\n              fecha: res.rows.item(i).fecha,\r\n              hora_inicio: res.rows.item(i).hora_inicio,\r\n              hora_fin: res.rows.item(i).hora_fin,\r\n              id_asig_secc: res.rows.item(i).id_asig_secc,\r\n        \r\n              \r\n            })\r\n          }\r\n        }\r\n        //actualizo el observable\r\n        this.listaAsistecia.next(items);\r\n  \r\n      })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    buscardetalle_asist() {\r\n      //ejecuto la consulta\r\n      return this.database.executeSql('SELECT * FROM detalle_asist', []).then(res => {\r\n        //creo el arreglo para los registros\r\n        let items: DetalleAsists[] = [];\r\n        //si existen filas\r\n        if (res.rows.length > 0) {\r\n          //recorro el cursor y lo agrego al arreglo\r\n          for (var i = 0; i < res.rows.length; i++) {\r\n            items.push({\r\n              id_detalle: res.rows.item(i).id_detalle,\r\n              status: res.rows.item(i).status,\r\n              id_usuario: res.rows.item(i).id_usuario,\r\n              id_asistencia: res.rows.item(i).id_asistencia\r\n              \r\n            })\r\n          }\r\n        }\r\n        //actualizo el observable\r\n        this.listaDetalle_asist.next(items);\r\n  \r\n      })\r\n    }\r\n\r\n\r\n\r\n    /*buscarlistas() {\r\n      //ejecuto la consulta\r\n      return this.database.executeSql('SELECT * FROM listado', []).then(res => {\r\n        //creo el arreglo para los registros\r\n        let items: Listados[] = [];\r\n        //si existen filas\r\n        if (res.rows.length > 0) {\r\n          //recorro el cursor y lo agrego al arreglo\r\n          for (var i = 0; i < res.rows.length; i++) {\r\n            items.push({\r\n              id_listado: res.rows.item(i).id_listado,\r\n              id_usuario: res.rows.item(i).id_usuario,\r\n              id_asig_secc: res.rows.item(i).id_asig_secc,\r\n              status: res.rows.item(i).status\r\n              \r\n            })\r\n          }\r\n        }\r\n        //actualizo el observable\r\n        this.listaListado.next(items);\r\n  \r\n      })\r\n    }*/\r\n\r\n\r\n\r\n\r\n    buscarasignatura() {\r\n      //ejecuto la consulta\r\n      return this.database.executeSql('SELECT * FROM asignatura', []).then(res => {\r\n        //creo el arreglo para los registros\r\n        let items: Asignaturas[] = [];\r\n        //si existen filas\r\n        if (res.rows.length > 0) {\r\n          //recorro el cursor y lo agrego al arreglo\r\n          for (var i = 0; i < res.rows.length; i++) {\r\n            items.push({\r\n              id_asignatura: res.rows.item(i).id_asignatura,\r\n              sigla: res.rows.item(i).sigla,\r\n              nombre: res.rows.item(i).nombre\r\n              \r\n            })\r\n          }\r\n        }\r\n        //actualizo el observable\r\n        this.listAsignatura.next(items);\r\n  \r\n      })\r\n    }\r\n\r\n\r\n    buscarseccion() {\r\n      //ejecuto la consulta\r\n      return this.database.executeSql('SELECT * FROM seccion', []).then(res => {\r\n        //creo el arreglo para los registros\r\n        let items: Secciones[] = [];\r\n        //si existen filas\r\n        if (res.rows.length > 0) {\r\n          //recorro el cursor y lo agrego al arreglo\r\n          for (var i = 0; i < res.rows.length; i++) {\r\n            items.push({\r\n              id_seccion: res.rows.item(i).id_seccion,\r\n              sigla: res.rows.item(i).sigla\r\n              \r\n            })\r\n          }\r\n        }\r\n        //actualizo el observable\r\n        this.listaSecciones.next(items);\r\n  \r\n      })\r\n    }\r\n\r\n\r\n\r\n    buscarasig_secc() {\r\n      //ejecuto la consulta\r\n      return this.database.executeSql('SELECT * FROM asig_secc', []).then(res => {\r\n        //creo el arreglo para los registros\r\n        let items: AsigSeccs[] = [];\r\n        //si existen filas\r\n        if (res.rows.length > 0) {\r\n          //recorro el cursor y lo agrego al arreglo\r\n          for (var i = 0; i < res.rows.length; i++) {\r\n            items.push({\r\n              id_asig_secc: res.rows.item(i).id_asig_secc,\r\n              id_asignatur: res.rows.item(i).id_asignatur,\r\n              id_seccion: res.rows.item(i).id_seccion,\r\n              id_usuario: res.rows.item(i).id_usuario\r\n\r\n            })\r\n          }\r\n        }\r\n        //actualizo el observable\r\n        this.listaAsig_secc.next(items);\r\n  \r\n      })\r\n    }\r\n\r\n\r\n    /*buscarrol() {\r\n      //ejecuto la consulta\r\n      return this.database.executeSql('SELECT * FROM rol', []).then(res => {\r\n        //creo el arreglo para los registros\r\n        let items: Roles[] = [];\r\n        //si existen filas\r\n        if (res.rows.length > 0) {\r\n          //recorro el cursor y lo agrego al arreglo\r\n          for (var i = 0; i < res.rows.length; i++) {\r\n            items.push({\r\n              id_rol: res.rows.item(i).id_rol,\r\n              nom_rol: res.rows.item(i).id_rol\r\n              \r\n            })\r\n          }\r\n        }\r\n        //actualizo el observable\r\n        this.listaRol.next(items);\r\n  \r\n      })\r\n    }*/\r\n\r\n\r\n  buscarUsuarios() {\r\n    //ejecuto la consulta\r\n    return this.database.executeSql('SELECT * FROM usuario', []).then(res => {\r\n      //creo el arreglo para los registros\r\n      let items: Usuarios [] = [];\r\n        //si existen filas\r\n      if (res.rows.length > 0) {\r\n          //recorro el cursor y lo agrego al arreglo\r\n        for (var i = 0; i < res.rows.length; i++) {\r\n          items.push({\r\n            id_usuario: res.rows.item(i).id_usuario,\r\n            nombre: res.rows.item(i).nombre,\r\n            clave: res.rows.item(i).clave,\r\n            id_rol: res.rows.item(i).id_rol,\r\n            imagen: res.row.item(i).imagen,\r\n            nombre_r: res.row.item(i).nombre_r,\r\n            telefono: res.row.item(i).telefono,\r\n            correo: res.row.item(i).correo,\r\n            direccion: res.row.item(i).direccion\r\n          })\r\n        }\r\n      }\r\n        //actualizo el observable\r\n      this.listaUsuarios.next(items);\r\n  \r\n    })\r\n  }\r\n\r\n    //registro de datos\r\n    //registrar usuario\r\n  registrarUsuario(id_usuario, nombre ,clave,id_rol) {\r\n    let data = [id_usuario , nombre,clave,id_rol];\r\n    return this.database.executeSql('INSERT or IGNORE INTO usuario(id_usuario ,nombre,clave,id_rol) VALUES (?,?,?,?)', data).then(data2 => {\r\n      this.buscarUsuarios();\r\n      this.presentAlert(\"Registro Realizado\");\r\n    })\r\n  }\r\n\r\n    /*registrar rol\r\n    registrarRol(id_rol, nom_rol ) {\r\n      let data = [id_rol, nom_rol ];\r\n      return this.database.executeSql('INSERT INTO rol(id_rol ,nom_rol ) VALUES (?,?)', data).then(data2 => {\r\n        this.buscarrol();\r\n        this.presentAlert(\"Registro Realizado\");\r\n      })\r\n    }*/\r\n\r\n    //registrar seccion\r\n    registrarSeccion(id_seccion, sigla) {\r\n      let data = [id_seccion, sigla];\r\n      return this.database.executeSql('INSERT OR IGNORE INTO  seccion(id_seccion ,sigla) VALUES (?,?)', data).then(data2 => {\r\n        this.buscarseccion();\r\n        this.presentAlert(\"Registro Realizado\");\r\n      })\r\n    }\r\n\r\n    /*registrar listado\r\n    registrarlistado(id_listado, status, id_usuario, id_asig_secc) {\r\n      let data = [id_listado, status, id_usuario, id_asig_secc];\r\n      return this.database.executeSql('INSERT INTO listado(id_listado ,status, id_usuario, id_asig_secc) VALUES (?,?,?,?)', data).then(data2 => {\r\n        this.buscarlistas();\r\n        this.presentAlert(\"Registro Realizado\");\r\n      })\r\n    }*/\r\n\r\n    //registrar asistencia\r\n    registrarasistencia(id_asistencia, fecha, hora_inicio,hora_fin, id_asig_secc) {\r\n      let data = [id_asistencia, fecha, hora_inicio,hora_fin, id_asig_secc];\r\n      return this.database.executeSql('INSERT INTO OR IGNORE INTO  asistencia(id_asistencia ,fecha,hora_inicio, hora_fin, id_asig_secc) VALUES (?,?,?,?,?)', data).then(data2 => {\r\n        this.buscarasistencia();\r\n        this.presentAlert(\"Registro Realizado\");\r\n      })\r\n    }\r\n\r\n    //registrar asignatura\r\n    registrarasignatura(id_asignatura, sigla, nombre) {\r\n      let data = [id_asignatura, sigla, nombre];\r\n      return this.database.executeSql('INSERT OR IGNORE INTO  asignatura(id_asignatura, sigla ,nombre) VALUES (?,?,?)', data).then(data2 => {\r\n        this.buscarasignatura();\r\n        this.presentAlert(\"Registro Realizado\");\r\n      })\r\n    }\r\n\r\n    //registrar Detalle asistencia\r\n    registrardetalle_asist(id_detalle, status, id_usuario, id_asistencia) {\r\n      let data = [id_detalle, status, id_usuario, id_asistencia];\r\n      return this.database.executeSql('INSERT OR IGNORE INTO asignatura(id_detalle, status, id_usuario, id_asistencia) VALUES (?,?,?,?)', data).then(data2 => {\r\n        this.buscardetalle_asist();\r\n        this.presentAlert(\"Registro Realizado\");\r\n      })\r\n    }\r\n\r\n    //registrar Asig_Secc\r\n    registrarasig_secc(id_asig_secc,  id_usuario,id_asignatura, id_seccion) {\r\n      let data = [id_asig_secc,  id_usuario,id_asignatura, id_seccion ];\r\n      return this.database.executeSql('INSERT OR IGNORE INTO  asig_secc(id_asig_secc,   id_usuario, id_asignatura, id_seccion ) VALUES (?,?,?,?)', data).then(data2 => {\r\n        this.buscarasig_secc();\r\n        this.presentAlert(\"Registro Realizado\");\r\n      })\r\n    }\r\n\r\n  \r\n\r\n\r\n    //modifacion de datos\r\n    //modificar usuarios\r\n    modificarUsuario(id_usuario, nombre,clave) {\r\n      let data = [id_usuario, nombre,clave];\r\n      return this.database.executeSql('UPDATE usuario SET nombre = ?, clave = ?  WHERE id_usuario = ?', data).then(data2 => {\r\n        this.buscarUsuarios();\r\n        this.presentAlert(\"Registro Modificado\");\r\n      })\r\n  \r\n    }  \r\n\r\n    /*modificar rol\r\n    modificarrol(id_rol, nom_rol) {\r\n      let data = [id_rol, nom_rol];\r\n      return this.database.executeSql('UPDATE rol SET nom_rol = ?  WHERE id_rol = ?', data).then(data2 => {\r\n        this.buscarrol();\r\n        this.presentAlert(\"Registro Modificado\");\r\n      })\r\n  \r\n    }*/\r\n\r\n    //modificar seccion\r\n    modificarseccion(id_seccion, sigla) {\r\n      let data = [id_seccion, sigla];\r\n      return this.database.executeSql('UPDATE seccion SET sigla = ?  WHERE id_seccion = ?', data).then(data2 => {\r\n        this.buscarseccion();\r\n        this.presentAlert(\"Registro Modificado\");\r\n      })\r\n  \r\n    }\r\n    \r\n    /*modificar listado\r\n    modificarlistado(id_listado, status) {\r\n      let data = [id_listado, status];\r\n      return this.database.executeSql('UPDATE listado SET status = ?  WHERE id_listado = ?', data).then(data2 => {\r\n        this.buscarlistas();\r\n        this.presentAlert(\"Registro Modificado\");\r\n      })\r\n  \r\n    }*/\r\n    \r\n    //modificar asistencia\r\n    modificarasistencia(id_asistencia, fecha, hora_inicio,hora_fin) {\r\n      let data = [id_asistencia, fecha, hora_inicio,hora_fin];\r\n      return this.database.executeSql('UPDATE asistencia SET fecha = ?, hora_inicio = ?, hora_fin = ?  WHERE id_asistencia = ?', data).then(data2 => {\r\n        this.buscarasistencia();\r\n        this.presentAlert(\"Registro Modificado\");\r\n      })\r\n  \r\n    } \r\n\r\n    //modificar asignatura\r\n    modificarasignatura(id_asignatura, sigla, nombre) {\r\n      let data = [id_asignatura, sigla, nombre];\r\n      return this.database.executeSql('UPDATE asignatura SET sigla = ?, nombre = ?  WHERE id_asignatura = ?', data).then(data2 => {\r\n        this.buscarasistencia();\r\n        this.presentAlert(\"Registro Modificado\");\r\n      })\r\n  \r\n    } \r\n\r\n    //modificar asignatura\r\n    modificardetalle_asist(id_detalle, status) {\r\n      let data = [id_detalle, status];\r\n      return this.database.executeSql('UPDATE detalle_asist SET status = ?  WHERE id_detalle = ?', data).then(data2 => {\r\n        this.buscarasistencia();\r\n        this.presentAlert(\"Registro Modificado\");\r\n      })\r\n  \r\n    } \r\n\r\n    //modificar asig_secc\r\n    modificarasig_Secc(id_asig_secc, sigla, nombre) {\r\n      let data = [id_asig_secc, sigla, nombre];\r\n      return this.database.executeSql('UPDATE asig_secc SET sigla = ?, nombre = ?  WHERE id_asig_secc = ?', data).then(data2 => {\r\n        this.buscarasistencia();\r\n        this.presentAlert(\"Registro Modificado\");\r\n      })\r\n  \r\n    } \r\n\r\n\r\n\r\n\r\n  \r\n    //eliminar datos\r\n    //eliminar usuario\r\n    eliminarusuario(id){\r\n      return this.database.executeSql('DELETE FROM usuario WHERE id_usuario = ?',[id]).then(data2=>{\r\n        this.buscarUsuarios();\r\n        this.presentAlert(\"Registro Eliminado\");\r\n      })\r\n  \r\n    }\r\n\r\n    /*eliminar rol\r\n    eliminarrol(id){\r\n      return this.database.executeSql('DELETE FROM rol WHERE id_rol = ?',[id]).then(data2=>{\r\n        this.buscarrol();\r\n        this.presentAlert(\"Registro Eliminado\");\r\n      })\r\n  \r\n    }*/\r\n\r\n    //eliminar asig_secc\r\n    eliminarasig_secc(id){\r\n      return this.database.executeSql('DELETE FROM asig_secc WHERE id_asig_secc = ?',[id]).then(data2=>{\r\n        this.buscarasig_secc();\r\n        this.presentAlert(\"Registro Eliminado\");\r\n      })\r\n  \r\n    }\r\n\r\n    //eliminar seccion\r\n    eliminarseccion(id){\r\n      return this.database.executeSql('DELETE FROM seccion WHERE id_seccion = ?',[id]).then(data2=>{\r\n        this.buscarseccion();\r\n        this.presentAlert(\"Registro Eliminado\");\r\n      })\r\n  \r\n    }\r\n\r\n    //eliminar asignatura\r\n    eliminarasignaturan(id){\r\n      return this.database.executeSql('DELETE FROM asignatura WHERE id_asignatura = ?',[id]).then(data2=>{\r\n        this.buscarasignatura();\r\n        this.presentAlert(\"Registro Eliminado\");\r\n      })\r\n  \r\n    }\r\n\r\n    /*eliminar listas\r\n    eliminaralistas(id){\r\n      return this.database.executeSql('DELETE FROM listado WHERE id_listado = ?',[id]).then(data2=>{\r\n        this.buscarlistas();\r\n        this.presentAlert(\"Registro Eliminado\");\r\n      })\r\n  \r\n    }*/\r\n\r\n    //eliminar detalle_asist\r\n    eliminardetalle_asist(id){\r\n      return this.database.executeSql('DELETE FROM detalle_asist WHERE id_detalle = ?',[id]).then(data2=>{\r\n        this.buscardetalle_asist();\r\n        this.presentAlert(\"Registro Eliminado\");\r\n      })\r\n  \r\n    }\r\n\r\n    //eliminar detalle_asist\r\n    eliminarasistencia(id){\r\n      return this.database.executeSql('DELETE FROM asistencia WHERE id_asistencia = ?',[id]).then(data2=>{\r\n        this.buscarasistencia();\r\n        this.presentAlert(\"Registro Eliminado\");\r\n      })\r\n  \r\n    }\r\n  \r\n  \r\n  \r\n  \r\n\r\n}\r\n\r\n\r\n\r\n\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}